@model HackerNews.ViewModels.Boards.BoardDetailsViewModel

@{
    Layout = "_Layout";
    var nextPagingParam = new Dictionary<string, string>
{
        {"id", Model.GetModel.Id.ToString() },
        {"pageNumber", Model.NextPagingParams.PageNumber.ToString() },
        {"pageSize", Model.NextPagingParams.PageSize.ToString() }
    };
    var prevPagingParam = new Dictionary<string, string> {
        {"id", Model.GetModel.Id.ToString() },
        {"pageNumber", Model.PrevPagingParams.PageNumber.ToString() },
        {"pageSize", Model.PrevPagingParams.PageSize.ToString() }
    };
}

<div class="container-fluid">
    <div class="row p-4">
        @* Articles *@
        <div class="col-sm-12 col-md-7 col-lg-9 main-content card-deck">
            <h1>@Model.GetModel.Title</h1>
            @foreach (var article in Model.Articles.Items)
            {
                @await Component.InvokeAsync("ArticleCard", new { articleModel = article });
            }
            @* Bottom of Article List *@
            <div class="row w-100">
                <div class="col">
                    @if (Model.Articles.HasPrevious)
                    {
                        <a asp-action="Details" asp-all-route-data="prevPagingParam" class="mr-auto btn btn-outline-secondary ">Prev</a>
                    }
                    @if (Model.Articles.HasNext)
                    {
                        <a asp-action="Details" asp-all-route-data="nextPagingParam" class="mr-auto btn btn-outline-secondary ">Next</a>
                    }
                </div>
            </div>
            <div class="row h-100"></div>
        </div>
        @* Sidebar *@
        <div class="d-none d-md-block col-md-5 col-lg-3 sidebar">
            <partial name="_BoardSidebarCard" model="Model.GetModel" />
        </div>

        @* Footer *@
    </div>
    <div class="card-footer">

    </div>
</div>