@model HackerNews.Mvc.ViewModels.Home.HomeSearchViewModel

@* Boards *@
@if (Model.BoardPage.Items.Count() > 0)
{
    <h4>Boards</h4>
    @foreach (var board in Model.BoardPage.Items)
    {
        @await Component.InvokeAsync("BoardCard", new { boardModel = board });
    }
    <a asp-controller="Boards" asp-action="Search" asp-route-searchTerm="@Model.SearchTerm" class="btn">More</a>
}

@* Users *@
@if (Model.UserPage.Items.Count() > 0)
{
    <h4>Users</h4>
    @foreach (var user in Model.UserPage.Items)
    {
        @await Component.InvokeAsync("UserCard", new { userModel = user });
    }
    <a asp-controller="Users" asp-action="Search" asp-route-searchTerm="@Model.SearchTerm" class="btn">More</a>
}

@* Articles *@
@if (Model.ArticlePage.Items.Count() > 0)
{
    <h4>Articles</h4>
    @foreach (var article in Model.ArticlePage.Items)
    {
        @await Component.InvokeAsync("ArticleCard", new { articleModel = article });
    }
    <a asp-controller="Articles" asp-action="Search" asp-route-searchTerm="@Model.SearchTerm" class="btn">More</a>
}

@* Comments *@
@if (Model.CommentPage.Items.Count() > 0)
{
    <h4>Comments</h4>
    @foreach (var comment in Model.CommentPage.Items)
    {
        @await Component.InvokeAsync("CommentCard", new { commentModel = comment });
    }
    <a asp-controller="Comments" asp-action="Search" asp-route-searchTerm="@Model.SearchTerm" class="btn ">More</a>
}


@section sidebar {
    @await Component.InvokeAsync("HomeSidebarCard")
}