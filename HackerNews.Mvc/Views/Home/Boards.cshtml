@model HackerNews.Mvc.ViewModels.Home.HomeBoardsViewModel

@{
    ViewData["Title"] = "Boards";
}

<!--<div class="container-fluid">
    <div class="row p-4">-->
@* Boards *@
<!--<div class="col-sm-12 col-md-7 col-lg-9 main-content card-deck">
    @foreach (var board in Model.BoardPage.Items)
    {
        @await Component.InvokeAsync("BoardCard", new { boardModel = board });
    }-->
@* Bottom of Boards List *@
<!--<div class="row w-100">
        <div class="col">
            @if (Model.BoardPage.HasPrev)
            {
                <a asp-controller="Home" asp-action="Boards" asp-all-route-data="Model.BoardPage.PrevPageQuery" class="mr-auto btn btn-outline-secondary ">Prev</a>
            }
            @if (Model.BoardPage.HasNext)
            {
                <a asp-controller="Home" asp-action="Boards" asp-all-route-data="Model.BoardPage.NextPageQuery" class="mr-auto btn btn-outline-secondary ">Next</a>
            }
        </div>
    </div>
    <div class="row h-100"></div>
</div>-->
@* Sidebar *@
<!--<div class="d-none d-md-block col-md-5 col-lg-3 sidebar">
    @await Component.InvokeAsync("HomeSidebarCard")
</div>-->
@* Footer *@
<!--</div>
    <div class="card-footer">

    </div>
</div>-->


@* Articles *@
@foreach (var board in Model.BoardPage.Items)
{
    @await Component.InvokeAsync("BoardCard", new { boardModel = board });
}
@* Bottom of Boards List *@
<div class="navigation-row">
    @* Bottom of Article List *@
    @if (Model.BoardPage.HasPrev)
    {
        <a asp-controller="Home" asp-action="Boards" asp-all-route-data="Model.BoardPage.PrevPageQuery" class="btn">Prev</a>
    }
    @if (Model.BoardPage.HasNext)
    {
        <a asp-controller="Home" asp-action="Boards" asp-all-route-data="Model.BoardPage.NextPageQuery" class="btn">Next</a>
    }
</div>

@section Sidebar {
    @await Component.InvokeAsync("HomeSidebarCard")
}
