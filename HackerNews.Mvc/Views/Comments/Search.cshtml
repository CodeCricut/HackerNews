@model HackerNews.Mvc.ViewModels.Comments.CommentSearchViewModel

@* Search Bar *@
<form asp-controller="Comments" asp-action="Search">
    <div class="input">
        <i class="fas fa-search input-icon"></i>
        <input type="search" class="page-search" placeholder="Search Comments" asp-for="SearchTerm">
    </div>
</form>

<a asp-controller="Home" asp-action="Search"
   asp-route-searchTerm="@Model.SearchTerm">
    Back to search
</a>

@* Comments *@
<h2>Search Comments</h2>

@foreach (var comment in Model.CommentPage.Items)
{
    @await Component.InvokeAsync("CommentCard", new { commentModel = comment });
}

@* Bottom of Comment List *@
<div class="navigation-row">
    @* Bottom of Comment List *@
    @if (Model.CommentPage.HasPrev)
    {
        <a asp-controller="CommentPage" asp-action="Search"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-pageNumber="@Model.CommentPage.PrevPagingParams.PageNumber.ToString()"
           asp-route-pageSize="@Model.CommentPage.PrevPagingParams.PageSize.ToString()"
           class="mr-auto btn btn-outline-secondary">
            Prev
        </a>
    }
    @if (Model.CommentPage.HasNext)
    {
        <a asp-controller="Comment" asp-action="Search"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-pageNumber="@Model.CommentPage.NextPagingParams.PageNumber.ToString()"
           asp-route-pageSize="@Model.CommentPage.NextPagingParams.PageSize.ToString()"
           class="mr-auto btn btn-outline-secondary">
            Next
        </a>
    }
</div>

@section Sidebar {
    @await Component.InvokeAsync("HomeSidebarCard")
}
