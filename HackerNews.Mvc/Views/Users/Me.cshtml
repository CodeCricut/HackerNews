@model HackerNews.Mvc.ViewModels.Users.PrivateUserDetailsViewModel

@{
    ViewData["Title"] = "Me";
}

@* Articles *@
<h4>Articles</h4>
@foreach (var article in Model.ArticlePage.Items)
{
    @await Component.InvokeAsync("ArticleCard", new { articleModel = article });
}
<a class="btn btn-outline-secondary" asp-controller="Users" asp-action="Articles" asp-route-userId="@Model.User.Id">All Articles</a>

@* Comments *@
<h4>Comments</h4>
@foreach (var comment in Model.CommentPage.Items)
{
    @await Component.InvokeAsync("CommentCard", new { commentModel = comment });
}
<a class="btn  btn-outline-secondary" asp-controller="Users" asp-action="Comments" asp-route-userId="@Model.User.Id">All Comments</a>

@section Sidebar {
    <div class="card card-lg user-details-card">
        @if (Model.ImageDataUrl != null && Model.ImageDataUrl != "")
        {
            <img src="@Model.ImageDataUrl" />
        }
        else
        {
            <img src="https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png" />
        }
        <div class="user-info">
            <h2>@Model.User.Username</h2>
            <h3>@Model.User.FirstName @Model.User.LastName</h3>
            <p>
                @Model.User.Karma karma | Joined at @Model.User.JoinDate
            </p>
            <p>
                Moderating <a asp-controller="Users" asp-action="Boards">@Model.User.BoardsModerating.Count() boards</a>
                | Subscribed to <a asp-controller="Users" asp-action="Boards">@Model.User.BoardsSubscribed.Count() boards</a>
            </p>
            <p>
                Saved <a asp-controller="Users" asp-action="Saved">@Model.User.SavedArticles.Count() articles</a> and <a asp-controller="Users" asp-action="Saved">
                    @Model.User.SavedComments.Count() comments
                </a>
            </p>
            <a asp-controller="Users" asp-action="Delete" class="btn btn-outline-danger">Delete Account</a>
        </div>
    </div>
}
