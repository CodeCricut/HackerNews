@model HackerNews.Mvc.ViewModels.Articles.ArticleDetailsViewModel
 
@{
    ViewData["Title"] = Model.Article.Title;
}

<div class="container">
    <div class="row">
        <div class="vote-panel d-none d-md-block col-md-1 text-center">
            <a asp-controller="Articles" asp-action="vote" asp-route-id="@Model.Article.Id" asp-route-upvote="@true">
                <i class="fas fa-caret-up"></i>
            </a>
            <div class="">@Model.Article.Karma</div>
            <a asp-controller="Articles" asp-action="vote" asp-route-id="@Model.Article.Id" asp-route-upvote="@false">
                <i class="fas fa-caret-down"></i>
            </a>
        </div>
        <div class="col-sm-12 col-md-11">
            <h1 class="h3">@Model.Article.Title</h1>

            @Model.Article.Karma points by <a asp-controller="Users" asp-action="Details" asp-route-id="@Model.User.Id">@Model.User.Username</a>
            at @Model.Article.PostDate
            |  <a asp-controller="Boards" asp-action="Details" asp-route-id="@Model.Board.Id">@Model.Board.Title</a>

            @if (Model.LoggedIn)
            {
                <text>
                    | <a asp-controller="Articles" asp-action="SaveArticle" asp-route-id="@Model.Article.Id">
                        @if (Model.UserSavedArticle)
                        {
                            <text>Unsave</text>
            }
            else
            {
                <text>Save</text>
            }
                    </a>
                    | @if (Model.Article.Deleted)
                    {
                        <span class="text-danger">Deleted</span>
                    }
                    else if (Model.UserWroteArticle)
                    {

                        <text> <a asp-controller="Articles" asp-action="Delete" asp-route-id="@Model.Article.Id" class="text-danger">Delete</a></text>
                    }
                    </text>
                }


            <p>@Model.Article.Text</p>

            @* Add Comment*@
            @if (Model.LoggedIn)
            {
                <form asp-controller="Articles" asp-action="AddComment" method="post">
                    <div class="form-group">
                        <textarea class="form-control" asp-for="PostCommentModel.Text"></textarea>
                    </div>
                    <input hidden asp-for="Article.BoardId" />
                    <input hidden asp-for="Article.Id" />
                    <input hidden asp-for="Article.UserId" />


                    <div class="form-group">
                        <input type="submit" class="btn btn-outline-secondary" value="Add comment" />
                    </div>
                </form>
            }

            <div class="container-fluid">
                @foreach (var comment in Model.CommentPage.Items)
                {
                    @await Component.InvokeAsync("CommentCard", new { commentModel = comment });
                }
                @if (Model.CommentPage.HasPrev)
                {
                    <a asp-controller="Articles" asp-action="Details" asp-all-route-data="@Model.CommentPage.PrevPageQuery" class="mr-auto btn btn-outline-secondary ">Prev</a>
                }
                @if (Model.CommentPage.HasNext)
                {
                    <a asp-controller="Articles" asp-action="Index" asp-all-route-data="@Model.CommentPage.NextPageQuery" class="mr-auto btn btn-outline-secondary ">Next</a>
                }
            </div>
        </div>
    </div>
</div>