@model HackerNews.Mvc.ViewModels.Articles.ArticleSearchViewModel


@* Search Bar *@
<form asp-controller="Articles" asp-action="Search">
    <div class="input">
        <i class="fas fa-search input-icon"></i>
        <input type="search" class="page-search" placeholder="Search Articles" asp-for="SearchTerm">
    </div>
</form>

<a asp-controller="Home" asp-action="Search"
   asp-route-searchTerm="@Model.SearchTerm">
    Back to search
</a>

@* Articles *@
<h2>Search Articles</h2>

@foreach (var article in Model.ArticlePage.Items)
{
    @await Component.InvokeAsync("ArticleCard", new { articleModel = article });
}

@* Bottom of Article List *@
<div class="navigation-row">
    @* Bottom of Article List *@
    @if (Model.ArticlePage.HasPrev)
    {
        <a asp-controller="Articles" asp-action="Search"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-pageNumber="@Model.ArticlePage.PrevPagingParams.PageNumber.ToString()"
           asp-route-pageSize="@Model.ArticlePage.PrevPagingParams.PageSize.ToString()"
           class="mr-auto btn btn-outline-secondary">
            Prev
        </a>
    }
    @if (Model.ArticlePage.HasNext)
    {
        <a asp-controller="Articles" asp-action="Search"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-pageNumber="@Model.ArticlePage.NextPagingParams.PageNumber.ToString()"
           asp-route-pageSize="@Model.ArticlePage.NextPagingParams.PageSize.ToString()"
           class="mr-auto btn btn-outline-secondary">
            Next
        </a>
    }
</div>

@section Sidebar {
    @* Sidebar *@
    @await Component.InvokeAsync("HomeSidebarCard")
}
